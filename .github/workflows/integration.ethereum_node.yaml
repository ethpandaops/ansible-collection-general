name: Integration (ethereum_node)
on:
  pull_request:
  push:
    branches:
      - master

defaults:
  run:
    working-directory: ansible_collections/ethpandaops/general

jobs:
  #global_vars:
  #  runs-on: ubuntu-latest
  #  steps: []
  #    - run: echo "Setting vars to be used in other jobs"
  #      shell: sh
  #  outputs:
  #    ALL_CONSENSUS_CLIENTS: "['teku', 'prysm', 'lighthouse', 'nimbus', 'lodestar', 'grandine']"
  #    ALL_EXECUTION_CLIENTS: "['geth', 'nethermind', 'erigon', 'besu', 'ethereumjs', 'reth']"
#
  # Job for change detection
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      ethereum_node: ${{ steps.global.outputs.ethereum_node }}
      dependencies: ${{ steps.global.outputs.dependencies }}
      consensus_clients: ${{ steps.consensus_clients.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: global
        with:
          filters: |
            ethereum_node: roles/ethereum_node/**
            dependencies: requirements.*
      - uses: dorny/paths-filter@v3
        id: consensus_clients
        with:
          filters: |
            grandine: roles/grandine/**
            lighthouse: roles/lighthouse/**
            lodestar: roles/lodestar/**
            nimbus: roles/nimbus/**
            prysm: roles/prysm/**
            teku: roles/teku/**

  vars:
    runs-on: ubuntu-latest
    needs: changes
    steps:
      - name: Set variables
        id: vars
        shell: sh
        run: |
          echo "ALL_CONSENSUS_CLIENTS=['teku', 'prysm', 'lighthouse', 'nimbus', 'lodestar', 'grandine']" >> $GITHUB_ENV
          echo "ALL_EXECUTION_CLIENTS=['geth', 'nethermind', 'erigon', 'besu', 'ethereumjs', 'reth']" >> $GITHUB_ENV
    outputs:
      ALL_CONSENSUS_CLIENTS: ${{ env.ALL_CONSENSUS_CLIENTS }}
      ALL_EXECUTION_CLIENTS: ${{ env.ALL_EXECUTION_CLIENTS }}

  # Integration test using molecule ( all pairs )
  all-clients:
    needs: [changes,vars]
    if: >-
      ${{
        needs.changes.outputs.ethereum_node == 'true' ||
        needs.changes.outputs.dependencies == 'true'
      }}
    concurrency:
      group: >-
        ${{ github.head_ref }}-ethereum-node-${{ matrix.consensus }}-${{ matrix.execution }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        consensus: ${{ fromJSON(needs.vars.outputs.ALL_CONSENSUS_CLIENTS) }}
        execution: ${{ fromJSON(needs.vars.outputs.ALL_EXECUTION_CLIENTS) }}
    runs-on: self-hosted-ghr-size-s-x64
    steps:
      - uses: actions/checkout@v4
        with:
          path: ansible_collections/ethpandaops/general

      - uses: ./ansible_collections/ethpandaops/general/.github/actions/setup

      - name: Run molecule
        working-directory: ansible_collections/ethpandaops/general/roles/ethereum_node
        run: molecule test
        env:
          PY_COLORS: '1'
          EXECUTION_CLIENT: ${{ matrix.execution }}
          CONSENSUS_CLIENT: ${{ matrix.consensus }}

  # Integration test using molecule ( consensus layer )
  consensus-clients:
    needs: [changes,vars]
    if: >-
      ${{
        needs.changes.outputs.ethereum_node == 'false' &&
        needs.changes.outputs.dependencies == 'false' &&
        needs.changes.outputs.consensus_clients != '[]'
      }}
    concurrency:
      group: >-
        ${{ github.head_ref }}-ethereum-node-${{ matrix.consensus }}-${{ matrix.execution }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        consensus: ${{ fromJSON(needs.changes.outputs.consensus_clients) }}
        execution: ${{ fromJSON(needs.vars.outputs.ALL_EXECUTION_CLIENTS) }}
    runs-on: self-hosted-ghr-size-s-x64
    steps:
      - uses: actions/checkout@v4
        with:
          path: ansible_collections/ethpandaops/general

      - uses: ./ansible_collections/ethpandaops/general/.github/actions/setup

      - name: Run molecule
        working-directory: ansible_collections/ethpandaops/general/roles/ethereum_node
        run: molecule test
        env:
          PY_COLORS: '1'
          EXECUTION_CLIENT: ${{ matrix.execution }}
          CONSENSUS_CLIENT: ${{ matrix.consensus }}
