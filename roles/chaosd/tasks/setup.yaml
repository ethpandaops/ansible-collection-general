- name: Create chaosd install directory
  ansible.builtin.file:
    path: "{{ chaosd_install_dir }}"
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Install ipset package for network chaos experiments
  ansible.builtin.apt:
    name: ipset
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"

- name: Set architecture suffix
  ansible.builtin.set_fact:
    chaosd_arch: "{{ 'amd64' if ansible_facts.architecture == 'x86_64' else 'arm64' }}"

- name: Download Chaosd {{ chaosd_version }}
  ansible.builtin.get_url:
    url: "{{ chaosd_download_url }}"
    dest: /tmp/chaosd.tar.gz
    owner: root
    group: root
    mode: "0644"
  vars:
    chaosd_download_url: "https://mirrors.chaos-mesh.org/chaosd-{{ chaosd_version }}-linux-{{ chaosd_arch }}.tar.gz"

- name: Unpack chaosd archive
  ansible.builtin.unarchive:
    src: /tmp/chaosd.tar.gz
    dest: "{{ chaosd_install_dir }}"
    extra_opts: [--strip-components=1]
    remote_src: true
    owner: root
    group: root
    creates: "{{ chaosd_install_dir }}/chaosd"

- name: Load sch_netem kernel module
  community.general.modprobe:
    name: sch_netem
    state: present
  when: 
    - ansible_kernel is version('2.6', '>')
    - ansible_virtualization_type != "docker"
  ignore_errors: true

- name: Copy systemd service file
  ansible.builtin.template:
    src: chaosd.service.j2
    dest: /etc/systemd/system/chaosd.service
    mode: "0644"
    owner: root
    group: root
  notify:
    - Reload systemd
    - Restart chaosd

- name: Enable and start chaosd service
  ansible.builtin.systemd:
    name: chaosd
    enabled: true
    state: started
    daemon_reload: true

- name: Run network partition attack
  ansible.builtin.command:
    cmd: "{{ chaosd_install_dir }}/chaosd attack network partition -d eth0 --direction from --hostname temporary.com --uid 9999"
  become: true
  changed_when: true

- name: Copy chaos iptables bridge script
  ansible.builtin.template:
    src: chaos-iptables-bridge.sh.j2
    dest: /usr/local/sbin/chaos-iptables-bridge.sh
    mode: "0755"
    owner: root
    group: root
  notify: Restart chaos-iptables-bridge

- name: Copy chaos iptables bridge systemd service
  ansible.builtin.template:
    src: chaos-iptables-bridge.service.j2
    dest: /etc/systemd/system/chaos-iptables-bridge.service
    mode: "0644"
    owner: root
    group: root
  notify:
    - Reload systemd
    - Restart chaos-iptables-bridge

- name: Enable and start chaos iptables bridge service
  ansible.builtin.systemd:
    name: chaos-iptables-bridge
    enabled: true
    state: started
    daemon_reload: true

- name: Clean up downloaded archive
  ansible.builtin.file:
    path: /tmp/chaosd.tar.gz
    state: absent

- name: Setup nginx proxy for chaosd
  ansible.builtin.include_tasks:
    file: setup_nginx_proxy.yaml
  when: chaosd_nginx_proxy_enabled | bool