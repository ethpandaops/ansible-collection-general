---

# Set this to true if you want to stop everything and wipe the databases
dora_cleanup_all: false


dora_user: dora
dora_datadir: "/data/dora"
dora_docker_network_name: shared
dora_docker_networks:
  - name: "{{ dora_docker_network_name }}"

# explorer config
dora_beaconapi_endpoint: "http://your-cl-node:5052" # deprecated
dora_beaconapi_endpoints:
  - name: default
    url: "{{ dora_beaconapi_endpoint }}"
    archive: false
    priority: 0
    headers: {}

dora_executionapi_endpoints: []
# - name: default
#   url: "http://execution-node:5052"
#   archive: false
#   priority: 0
#   headers: {}

dora_mev_relays: []
# - index: 0
#   name: "Relay 1"
#   url: "http://mev-relay/"

dora_chain_displayname: ""
dora_frontend_title: "Dora the Explorer"
dora_frontend_subtitle: "Testnet"
dora_frontend_ethexplorer: ""
dora_frontend_validatornames: ""
dora_frontend_validatornames_inventory: ""

dora_proxy_count: 1
dora_callrate_limit: 2
dora_callrate_burst: 10

dora_indexer_in_memory_epochs: 10

# This can be used to create additional config files for the beaconchain explorer.
# It's useful when using private testnets and you need to mount a custom network config
# as the chain config. All files will be available within the explorer containers on the
# /config directory.
dora_extra_config_files: {}

# ------------------------------------------------------------------

# dora
dora_enabled: true
dora_container_name: dora
dora_container_image: ethpandaops/dora:master
dora_container_env: {}
dora_container_ports: []
dora_container_volumes:
  - "{{ dora_datadir }}/explorer:/config"
dora_container_stop_timeout: "600"
dora_container_pull: true
dora_container_networks: "{{ dora_docker_networks }}"
dora_container_command: -config=/config/explorer.yaml

# dora-database
dora_db_enabled: true
dora_db_datadir: "{{ dora_datadir }}/database"
dora_db_container_name: dora-database
dora_db_container_image: bitnami/postgresql:15
dora_db_container_env:
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_PASSWORD: postgres
  POSTGRESQL_DATABASE: dora
dora_db_custom_postgres_config: |
  max_connections = 1024
dora_db_container_ports: []
dora_db_container_volumes:
  - "{{ dora_db_datadir }}/db:/bitnami/postgresql"
  - "{{ dora_db_datadir }}/conf.d://opt/bitnami/postgresql/conf/conf.d:ro"
dora_db_container_stop_timeout: "300"
dora_db_container_pull: false
dora_db_container_networks: "{{ dora_docker_networks }}"

dora_config: |
  # Chain network configuration
  chain:
    displayName: "{{ dora_chain_displayname }}"

  # HTTP Server configuration
  server:
    host: "0.0.0.0" # Address to listen on
    port: "8080" # Port to listen on

  frontend:
    enabled: true # Enable or disable to web frontend
    debug: false
    minimize: false # minimize html templates

    # Name of the site, displayed in the title tag
    siteName: "{{ dora_frontend_title }}"
    siteSubtitle: "{{ dora_frontend_subtitle }}"

    # link to EL Explorer
    ethExplorerLink: "{{ dora_frontend_ethexplorer }}"

    # file or inventory url to load validator names from
    validatorNamesYaml: "{{ dora_frontend_validatornames }}"
    validatorNamesInventory: "{{ dora_frontend_validatornames_inventory }}"

  rateLimit:
    enabled: true
    proxyCount: {{ dora_proxy_count }}
    rate: {{ dora_callrate_limit }}
    burst: {{ dora_callrate_burst }}

  beaconapi:
    # CL Client RPC
    endpoints:

    {% for endpoint in dora_beaconapi_endpoints %}
    - {{ endpoint | to_json }}
    {% endfor %}

    # local cache for page models
    localCacheSize: 100 # 100MB

    # remote cache for page models
    redisCacheAddr: ""
    redisCachePrefix: ""

  executionapi:
    # EL Client RPC
    endpoints: {% if not dora_executionapi_endpoints %}[]{% endif %}

    {% for endpoint in dora_executionapi_endpoints %}
    - {{ endpoint | to_json }}
    {% endfor %}

    depositLogBatchSize: 1000

  # indexer keeps track of the latest epochs in memory.
  indexer:
    # max number of epochs to keep in memory
    inMemoryEpochs: {{ dora_indexer_in_memory_epochs }}

    # number of seconds to wait between each epoch (don't overload CL client)
    syncEpochCooldown: 1

    # max number of parallel state requests to make to the CL clients
    maxParallelValidatorSetRequests: 2

  mevIndexer:
    # list of mev relays to crawl mev blocks from
    relays: {% if not dora_mev_relays %}[]{% endif %}

    {% for relay in dora_mev_relays %}
    - {{ relay | to_json }}
    {% endfor %}

    refreshInterval: 5m

  database:
    engine: "pgsql"
    pgsql:
      host: "dora-database"
      port: 5432
      user: "postgres"
      password: "postgres"
      name: "dora"
