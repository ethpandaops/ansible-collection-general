docker_nginx_proxy_user: nginx-proxy
docker_nginx_proxy_datadir: /opt/nginx-proxy
docker_nginx_proxy_default_email: "mail@yourdomain.tld"
docker_nginx_proxy_conf_tmpl: >-
  {{ lookup('ansible.builtin.url', 'https://raw.githubusercontent.com/nginx-proxy/nginx-proxy/main/nginx.tmpl', split_lines=False) }}
docker_nginx_proxy_templates_dir: "{{ docker_nginx_proxy_datadir }}/templates"

############################################################################
## Nginx
############################################################################
docker_nginx_proxy_container_image: nginx:alpine
docker_nginx_proxy_container_name: nginx-proxy
docker_nginx_proxy_container_published_ports: ["80:80", "443:443"]
docker_nginx_proxy_container_restart_policy: always
docker_nginx_proxy_container_networks_cli_compatible: true
docker_nginx_proxy_container_network_mode: default
docker_nginx_proxy_container_networks: []
docker_nginx_proxy_container_env: {}
docker_nginx_proxy_container_volumes_from: []
docker_nginx_proxy_container_volumes:
  - "{{ docker_nginx_proxy_datadir }}/conf:/etc/nginx/conf.d"
  - "{{ docker_nginx_proxy_datadir }}/vhost:/etc/nginx/vhost.d"
  - "{{ docker_nginx_proxy_datadir }}/certs:/etc/nginx/certs:ro"
  - html:/usr/share/nginx/html
docker_nginx_proxy_container_custom_config_files: # Will be added to /etc/nginx/conf.d/{key}
  client_max_body_size.conf: |
    client_max_body_size 100M;
  # Example:
  # custom.conf: |
  #   # content of the custom.conf file
  #   client_max_body_size 100m;

docker_nginx_proxy_container_custom_vhost_files: {} # Will be added to /etc/nginx/vhost.d/{key}
  # Example for CORS:
  # example.org_location_override: |
  #   location / {
  #       if ($request_method = 'OPTIONS') {
  #           add_header 'Access-Control-Allow-Origin' '*';
  #           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
  #           #
  #           # Custom headers and headers various browsers *should* be OK with but aren't
  #           #
  #           add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
  #           #
  #           # Tell client that this pre-flight info is valid for 20 days
  #           #
  #           add_header 'Access-Control-Max-Age' 1728000;
  #           add_header 'Content-Type' 'text/plain; charset=utf-8';
  #           add_header 'Content-Length' 0;
  #           return 204;
  #       }
  #       if ($request_method = 'POST') {
  #           add_header 'Access-Control-Allow-Origin' '*' always;
  #           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
  #       }
  #       if ($request_method = 'GET') {
  #           add_header 'Access-Control-Allow-Origin' '*' always;
  #           add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
  #       }
  #       proxy_pass http://example.org;
  #       set $upstream_keepalive true;
  #   }
############################################################################
## Docker-gen
############################################################################
docker_nginx_proxy_docker_gen_container_image: nginxproxy/docker-gen
docker_nginx_proxy_docker_gen_container_name: nginx-proxy-gen
docker_nginx_proxy_docker_gen_container_command: >-
  -notify-sighup nginx-proxy
  -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
docker_nginx_proxy_docker_gen_container_restart_policy: always
docker_nginx_proxy_docker_gen_container_networks_cli_compatible: true
docker_nginx_proxy_docker_gen_container_network_mode: default
docker_nginx_proxy_docker_gen_container_networks: []
docker_nginx_proxy_docker_gen_container_env: {}
docker_nginx_proxy_docker_gen_container_volumes_from:
  - "{{ docker_nginx_proxy_container_name }}"
docker_nginx_proxy_docker_gen_container_volumes:
  - "{{ docker_nginx_proxy_datadir }}/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
  - /var/run/docker.sock:/tmp/docker.sock:ro

############################################################################
## ACME companion
############################################################################
docker_nginx_proxy_acme_companion_enabled: true
docker_nginx_proxy_acme_companion_container_image: nginxproxy/acme-companion
docker_nginx_proxy_acme_companion_container_name: nginx-proxy-acme
docker_nginx_proxy_acme_companion_container_restart_policy: always
docker_nginx_proxy_acme_companion_container_networks_cli_compatible: true
docker_nginx_proxy_acme_companion_container_network_mode: default
docker_nginx_proxy_acme_companion_container_networks: []
docker_nginx_proxy_acme_companion_container_volumes_from:
  - "{{ docker_nginx_proxy_container_name }}"
docker_nginx_proxy_acme_companion_container_volumes:
  - "{{ docker_nginx_proxy_datadir }}/certs:/etc/nginx/certs:rw"
  - "{{ docker_nginx_proxy_datadir }}/acme:/etc/acme.sh"
  - /var/run/docker.sock:/var/run/docker.sock:ro
docker_nginx_proxy_acme_companion_container_env:
  DEFAULT_EMAIL: "{{ docker_nginx_proxy_default_email }}"
  NGINX_PROXY_CONTAINER: "{{ docker_nginx_proxy_container_name }}"
  NGINX_DOCKER_GEN_CONTAINER: "{{ docker_nginx_proxy_docker_gen_container_name }}"

############################################################################
## ACME retry monitor sidecontainer
############################################################################
docker_nginx_proxy_acme_monitor_enabled: false
docker_nginx_proxy_acme_monitor_container_image: alpine:latest
docker_nginx_proxy_acme_monitor_container_name: nginx-proxy-acme-monitor
docker_nginx_proxy_acme_monitor_container_restart_policy: always
docker_nginx_proxy_acme_monitor_container_networks_cli_compatible: true
docker_nginx_proxy_acme_monitor_container_network_mode: default
docker_nginx_proxy_acme_monitor_container_networks: []
docker_nginx_proxy_acme_monitor_wait_time: 900 # 15 minutes in seconds
docker_nginx_proxy_acme_monitor_container_volumes:
  - "{{ docker_nginx_proxy_datadir }}/certs:/etc/nginx/certs:rw"
  - "{{ docker_nginx_proxy_datadir }}/acme:/etc/acme.sh:rw"
  - /var/run/docker.sock:/var/run/docker.sock:rw
docker_nginx_proxy_acme_monitor_container_env:
  ACME_CONTAINER_NAME: "{{ docker_nginx_proxy_acme_companion_container_name }}"
  WAIT_TIME: "{{ docker_nginx_proxy_acme_monitor_wait_time | string }}"

############################################################################
## Wildcard certificate loader
############################################################################
# Enable automatically when all three are set (leave unset to disable)
# docker_nginx_proxy_wildcard_cert: "s.pk-devnet-0.ethpandaops.io"
# docker_nginx_proxy_wildcard_cert_url: "http://cert.s.template-devnet-0.ethpandaops.io/s.template-devnet-0.ethpandaops.io-latest.tar.enc"
# docker_nginx_proxy_wildcard_cert_psk: "USE-ANSIBLE-VAULT"
docker_nginx_proxy_wildcard_cert: ""
docker_nginx_proxy_wildcard_cert_url: ""
docker_nginx_proxy_wildcard_cert_psk: ""

# Derived flag: true iff all three are set
docker_nginx_proxy_wildcard_enabled: >-
  {{
    (docker_nginx_proxy_wildcard_cert is defined) and
    (docker_nginx_proxy_wildcard_cert_url is defined) and
    (docker_nginx_proxy_wildcard_cert_psk is defined)
  }}

# cert loader sidecar
docker_nginx_proxy_cert_loader_enabled: "{{ docker_nginx_proxy_wildcard_enabled | bool }}"
docker_nginx_proxy_cert_loader_fetch_interval: 14400    # seconds (4h)
docker_nginx_proxy_cert_loader_container_name: nginx-proxy-cert-loader
docker_nginx_proxy_cert_loader_container_image: ethpandaops/debian-docker:latest
docker_nginx_proxy_cert_loader_container_base_volumes:
  - /var/run/docker.sock:/var/run/docker.sock:ro
  - "{{ docker_nginx_proxy_datadir }}/certs:/etc/nginx/certs"
  - "{{ docker_nginx_proxy_datadir }}/cert-loader.sh:/cert-loader.sh:ro"
docker_nginx_proxy_cert_loader_container_extra_volumes: []
docker_nginx_proxy_cert_loader_container_volumes_from:
  - "{{ docker_nginx_proxy_container_name }}"
docker_nginx_proxy_cert_loader_container_volumes: |
  {{ docker_nginx_proxy_cert_loader_container_base_volumes + docker_nginx_proxy_cert_loader_container_extra_volumes }}
docker_nginx_proxy_cert_loader_container_base_env:
  WILDCARD_CERT_URL: "{{ docker_nginx_proxy_wildcard_cert_url }}"
  WILDCARD_CERT_PSK: "{{ docker_nginx_proxy_wildcard_cert_psk }}"
  WILDCARD_CERT_NAME: "{{ docker_nginx_proxy_wildcard_cert }}"
  FETCH_INTERVAL: "{{ docker_nginx_proxy_cert_loader_fetch_interval | string }}"
  NGINX_PROXY_NAME: "{{ docker_nginx_proxy_container_name }}"
  CERT_UID: "{{ docker_nginx_proxy_user_meta.uid | string }}"
  CERT_GID: "{{ docker_nginx_proxy_gid_cmd.stdout | trim }}"
docker_nginx_proxy_cert_loader_container_extra_env: {}
docker_nginx_proxy_cert_loader_container_env: >-
  {{
    (docker_nginx_proxy_cert_loader_container_base_env  | default({}))
    | combine(docker_nginx_proxy_cert_loader_container_extra_env | default({}), recursive=True)
  }}
docker_nginx_proxy_cert_loader_container_restart_policy: always
docker_nginx_proxy_cert_loader_container_network_mode: default
docker_nginx_proxy_cert_loader_container_networks: []
docker_nginx_proxy_cert_loader_container_base_command:
  - "/cert-loader.sh"
docker_nginx_proxy_cert_loader_container_extra_command: []
docker_nginx_proxy_cert_loader_container_command: |
  {{ docker_nginx_proxy_cert_loader_container_base_command + docker_nginx_proxy_cert_loader_container_extra_command }}

# Symlinker (docker-gen) sidecar
docker_nginx_proxy_cert_linker_enabled: "{{ docker_nginx_proxy_wildcard_enabled | bool }}"
docker_nginx_proxy_cert_linker_container_name: nginx-proxy-cert-linker
docker_nginx_proxy_cert_linker_container_image: nginxproxy/docker-gen:latest
docker_nginx_proxy_cert_linker_container_restart_policy: always
docker_nginx_proxy_cert_linker_container_network_mode: default
docker_nginx_proxy_cert_linker_container_networks: []
docker_nginx_proxy_cert_linker_container_volumes_from:
  - "{{ docker_nginx_proxy_container_name }}"
docker_nginx_proxy_cert_linker_container_base_volumes:
  - "/var/run/docker.sock:/tmp/docker.sock:ro"
  - "{{ docker_nginx_proxy_templates_dir }}/wildcard-symlinks.tmpl:/etc/docker-gen/templates/wildcard-symlinks.tmpl:ro"
  - "{{ docker_nginx_proxy_datadir }}/certs:/etc/nginx/certs"
docker_nginx_proxy_cert_linker_container_extra_volumes: []
docker_nginx_proxy_cert_linker_container_volumes: |
  {{ docker_nginx_proxy_cert_linker_container_base_volumes + docker_nginx_proxy_cert_linker_container_extra_volumes }}
docker_nginx_proxy_cert_linker_container_base_env:
  WILDCARD_CERT_NAME: "{{ docker_nginx_proxy_wildcard_cert }}"
docker_nginx_proxy_cert_linker_container_extra_env: {}
docker_nginx_proxy_cert_linker_container_env: >-
  {{
    (docker_nginx_proxy_cert_linker_container_base_env  | default({}))
    | combine(docker_nginx_proxy_cert_linker_container_extra_env | default({}), recursive=True)
  }}
docker_nginx_proxy_cert_linker_container_base_command:
  - /usr/local/bin/docker-gen
  - -watch
  - -notify
  - /bin/sh /etc/nginx/certs/wildcard-symlinks.sh
  - -notify-sighup
  - "{{ docker_nginx_proxy_container_name }}"
  - /etc/docker-gen/templates/wildcard-symlinks.tmpl
  - /etc/nginx/certs/wildcard-symlinks.sh
docker_nginx_proxy_cert_linker_container_extra_command: []
docker_nginx_proxy_cert_linker_container_command: |
  {{ docker_nginx_proxy_cert_linker_container_base_command + docker_nginx_proxy_cert_linker_container_extra_command }}
