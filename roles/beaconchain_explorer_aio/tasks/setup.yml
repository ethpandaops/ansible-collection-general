- name: Add beaconchain user
  ansible.builtin.user:
    name: "{{ beaconchain_explorer_aio_user }}"
  register: beaconchain_explorer_aio_user_meta

- name: Setting host facts using complex arguments
  ansible.builtin.set_fact:
    beaconchain_explorer_aio_user_uid: "{{ beaconchain_explorer_aio_user_meta.uid }}"

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0750"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"
  loop:
    - "{{ beaconchain_explorer_aio_installation_dir }}"
    - "{{ beaconchain_explorer_aio_installation_dir }}/bigtable"
    - "{{ beaconchain_explorer_aio_installation_dir }}/postgres"
    - "{{ beaconchain_explorer_aio_installation_dir }}/explorer"
    - "{{ beaconchain_explorer_aio_installation_dir }}/explorer/custom_configs"
    - "{{ beaconchain_explorer_aio_data_dir_explorer }}"
    - "{{ beaconchain_explorer_aio_data_dir_postgres }}"
    - "{{ beaconchain_explorer_aio_data_dir_bigtable }}"
    - "{{ beaconchain_explorer_aio_data_dir_redis }}"

- name: Copy config files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"
  loop:
    - src: "files/bigtable/eth1.proto"
      dest: "{{ beaconchain_explorer_aio_installation_dir }}/bigtable/eth1.proto"
      mode: "0640"
    - src: "files/bigtable/cbt-definitions.yml"
      dest: "{{ beaconchain_explorer_aio_installation_dir }}/bigtable/cbt-definitions.yml"
      mode: "0640"
    - src: "files/bigtable/init-bigtable.sh"
      dest: "{{ beaconchain_explorer_aio_installation_dir }}/bigtable/init-bigtable.sh"
      mode: "0700"

- name: Copy the postgres table sql file
  ansible.builtin.get_url:
    url: "{{ beaconchain_explorer_aio_sql_init_file_url }}"
    dest: "{{ beaconchain_explorer_aio_installation_dir }}/postgres/tables.sql"
    mode: "0640"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"

- name: Copy bigtable application credentials file
  ansible.builtin.copy:
    content: "{{ beaconchain_explorer_aio_bigtable_external_application_credentials }}"
    dest: "{{ beaconchain_explorer_aio_installation_dir }}/bigtable_secret.json"
    mode: "0640"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"
  when: beaconchain_explorer_aio_bigtable_external_enabled

- name: Copy docker-compose template
  ansible.builtin.template:
    src: "{{ beaconchain_explorer_aio_docker_compose_file }}"
    dest: "{{ beaconchain_explorer_aio_installation_dir }}/docker-compose.yml"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"
    mode: '0640'

- name: Create explorer config file
  ansible.builtin.copy:
    content: "{{ beaconchain_explorer_aio_config }}"
    dest: "{{ beaconchain_explorer_aio_installation_dir }}/explorer/config.yml"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"
    mode: '0640'

- name: Create frontend config file
  ansible.builtin.copy:
    content: "{{ beaconchain_frontend_config }}"
    dest: "{{ beaconchain_explorer_aio_installation_dir }}/explorer/frontend_config.yml"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"
    mode: '0640'

- name: Create custom config files
  ansible.builtin.copy:
    content: "{{ item.value }}"
    dest: "{{ beaconchain_explorer_aio_installation_dir }}/explorer/custom_configs/{{ item.key }}"
    owner: "{{ beaconchain_explorer_aio_user }}"
    group: "{{ beaconchain_explorer_aio_user }}"
    mode: '0640'
  loop: "{{ beaconchain_explorer_aio_extra_config_files | dict2items }}"

- name: Create and start database services
  community.docker.docker_compose_v2:
    project_src: "{{ beaconchain_explorer_aio_installation_dir }}"
    services:
      - postgres
      - redis
  register: beaconchain_explorer_aio_compose_db_meta

- name: Check that database services are running
  ansible.builtin.assert:
    that:
      - beaconchain_explorer_aio_compose_db_meta.services["postgres"]["beaconchain_postgres"].state.running
      - beaconchain_explorer_aio_compose_db_meta.services["redis"]["beaconchain_redis"].state.running

- name: Start bigtable emulator
  when: not beaconchain_explorer_aio_bigtable_external_enabled
  block:
    - name: Create and start database service
      community.docker.docker_compose_v2:
        project_src: "{{ beaconchain_explorer_aio_installation_dir }}"
        services:
          - bigtable
      register: beaconchain_explorer_aio_compose_db_bigtable_meta
    - name: Check that bigtable service is running
      ansible.builtin.assert:
        that:
          - beaconchain_explorer_aio_compose_db_bigtable_meta.services["bigtable"]["beaconchain_bigtable"].state.running
    - name: Init bigtable
      ansible.builtin.shell: "docker exec beaconchain_bigtable /init-bigtable.sh && touch {{ beaconchain_explorer_aio_installation_dir }}/bigtable/initialized"
      args:
        creates: "{{ beaconchain_explorer_aio_installation_dir }}/bigtable/initialized"

- name: Create remaining explorer services
  community.docker.docker_compose_v2:
    project_src: "{{ beaconchain_explorer_aio_installation_dir }}"
    services:
      - exporter
      - eth1indexer
      - statistics
      - frontend-updater
      - frontend
  register: beaconchain_explorer_aio_compose_explorer_meta
