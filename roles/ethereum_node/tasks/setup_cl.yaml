- name: "Consensus client: lighthouse"
  when: ethereum_node_cl == "lighthouse"
  ansible.builtin.include_role:
    name: ethpandaops.general.lighthouse
  vars:
    lighthouse_announced_ip: "{{ ethereum_node_announced_ip }}"
    lighthouse_ports_p2p_tcp: "{{ ethereum_node_cl_ports_p2p_tcp }}"
    lighthouse_ports_p2p_udp: "{{ ethereum_node_cl_ports_p2p_udp }}"
    lighthouse_ports_http_beacon: "{{ ethereum_node_cl_ports_http_beacon }}"
    lighthouse_ports_metrics: "{{ ethereum_node_cl_ports_metrics }}"
    lighthouse_ports_quic: "{{ ethereum_node_cl_ports_quic }}"
    lighthouse_container_networks: "{{ ethereum_node_docker_networks }}"
    lighthouse_container_pull: "{{ ethereum_node_images_always_pull }}"
    lighthouse_execution_engine_endpoint: "{{ ethereum_node_execution_engine_endpoint }}"
    lighthouse_beacon_endpoint: "{{ ethereum_node_beacon_endpoint }}"
    lighthouse_validator_enabled: "{{ ethereum_node_cl_validator_enabled }}"
    lighthouse_validator_container_networks: "{{ ethereum_node_docker_networks }}"
    lighthouse_validator_fee_recipient: "{{ ethereum_node_cl_validator_fee_recipient }}"
    lighthouse_mev_boost_enabled: "{{ ethereum_node_external_builder_enabled }}"
    lighthouse_mev_boost_endpoint: "{{ ethereum_node_external_builder_endpoint }}"
    lighthouse_checkpoint_sync_enabled: "{{ ethereum_node_cl_checkpoint_sync_enabled }}"
    lighthouse_ipv6_enabled: "{{ ethereum_node_ipv6_enabled }}"

- name: "Consensus client: teku"
  when: ethereum_node_cl == "teku"
  ansible.builtin.include_role:
    name: ethpandaops.general.teku
  vars:
    teku_announced_ip: "{{ ethereum_node_announced_ip }}"
    teku_ports_p2p_tcp: "{{ ethereum_node_cl_ports_p2p_tcp }}"
    teku_ports_p2p_udp: "{{ ethereum_node_cl_ports_p2p_udp }}"
    teku_ports_http_beacon: "{{ ethereum_node_cl_ports_http_beacon }}"
    teku_ports_metrics: "{{ ethereum_node_cl_ports_metrics }}"
    teku_container_networks: "{{ ethereum_node_docker_networks }}"
    teku_container_pull: "{{ ethereum_node_images_always_pull }}"
    teku_execution_engine_endpoint: "{{ ethereum_node_execution_engine_endpoint }}"
    teku_validator_enabled: "{{ ethereum_node_cl_validator_enabled }}"
    teku_validator_container_networks: "{{ ethereum_node_docker_networks }}"
    teku_validator_fee_recipient: "{{ ethereum_node_cl_validator_fee_recipient }}"
    teku_mev_boost_enabled: "{{ ethereum_node_external_builder_enabled }}"
    teku_mev_boost_endpoint: "{{ ethereum_node_external_builder_endpoint }}"
    teku_checkpoint_sync_enabled: "{{ ethereum_node_cl_checkpoint_sync_enabled }}"
    teku_ipv6_enabled: "{{ ethereum_node_ipv6_enabled }}"

- name: "Consensus client: prysm"
  when: ethereum_node_cl == "prysm"
  ansible.builtin.include_role:
    name: ethpandaops.general.prysm
  vars:
    prysm_announced_ip: "{{ ethereum_node_announced_ip }}"
    prysm_ports_p2p_tcp: "{{ ethereum_node_cl_ports_p2p_tcp }}"
    prysm_ports_p2p_udp: "{{ ethereum_node_cl_ports_p2p_udp }}"
    prysm_ports_http_beacon: "{{ ethereum_node_cl_ports_http_beacon }}"
    prysm_ports_metrics: "{{ ethereum_node_cl_ports_metrics }}"
    prysm_container_networks: "{{ ethereum_node_docker_networks }}"
    prysm_container_pull: "{{ ethereum_node_images_always_pull }}"
    prysm_execution_engine_endpoint: "{{ ethereum_node_execution_engine_endpoint }}"
    prysm_beacon_endpoint: "{{ ethereum_node_beacon_grpc_endpoint }}"
    prysm_validator_enabled: "{{ ethereum_node_cl_validator_enabled }}"
    prysm_validator_container_networks: "{{ ethereum_node_docker_networks }}"
    prysm_validator_fee_recipient: "{{ ethereum_node_cl_validator_fee_recipient }}"
    prysm_mev_boost_enabled: "{{ ethereum_node_external_builder_enabled }}"
    prysm_mev_boost_endpoint: "{{ ethereum_node_external_builder_endpoint }}"
    prysm_checkpoint_sync_enabled: "{{ ethereum_node_cl_checkpoint_sync_enabled }}"
    prysm_ipv6_enabled: "{{ ethereum_node_ipv6_enabled }}"

- name: "Consensus client: lodestar"
  when: ethereum_node_cl == "lodestar"
  ansible.builtin.include_role:
    name: ethpandaops.general.lodestar
  vars:
    lodestar_announced_ip: "{{ ethereum_node_announced_ip }}"
    lodestar_ports_p2p_tcp: "{{ ethereum_node_cl_ports_p2p_tcp }}"
    lodestar_ports_p2p_udp: "{{ ethereum_node_cl_ports_p2p_udp }}"
    lodestar_ports_http_beacon: "{{ ethereum_node_cl_ports_http_beacon }}"
    lodestar_ports_metrics: "{{ ethereum_node_cl_ports_metrics }}"
    lodestar_container_networks: "{{ ethereum_node_docker_networks }}"
    lodestar_container_pull: "{{ ethereum_node_images_always_pull }}"
    lodestar_execution_engine_endpoint: "{{ ethereum_node_execution_engine_endpoint }}"
    lodestar_beacon_endpoint: "{{ ethereum_node_beacon_endpoint }}"
    lodestar_validator_enabled: "{{ ethereum_node_cl_validator_enabled }}"
    lodestar_validator_container_networks: "{{ ethereum_node_docker_networks }}"
    lodestar_validator_fee_recipient: "{{ ethereum_node_cl_validator_fee_recipient }}"
    lodestar_mev_boost_enabled: "{{ ethereum_node_external_builder_enabled }}"
    lodestar_mev_boost_endpoint: "{{ ethereum_node_external_builder_endpoint }}"
    lodestar_checkpoint_sync_enabled: "{{ ethereum_node_cl_checkpoint_sync_enabled }}"
    lodestar_ipv6_enabled: "{{ ethereum_node_ipv6_enabled }}"

- name: "Consensus client: nimbus"
  when: ethereum_node_cl == "nimbus"
  ansible.builtin.include_role:
    name: ethpandaops.general.nimbus
  vars:
    nimbus_announced_ip: "{{ ethereum_node_announced_ip }}"
    nimbus_ports_p2p_tcp: "{{ ethereum_node_cl_ports_p2p_tcp }}"
    nimbus_ports_p2p_udp: "{{ ethereum_node_cl_ports_p2p_udp }}"
    nimbus_ports_http_beacon: "{{ ethereum_node_cl_ports_http_beacon }}"
    nimbus_ports_metrics: "{{ ethereum_node_cl_ports_metrics }}"
    nimbus_container_networks: "{{ ethereum_node_docker_networks }}"
    nimbus_container_pull: "{{ ethereum_node_images_always_pull }}"
    nimbus_execution_engine_endpoint: "{{ ethereum_node_execution_engine_endpoint }}"
    nimbus_validator_enabled: "{{ ethereum_node_cl_validator_enabled }}"
    nimbus_validator_container_networks: "{{ ethereum_node_docker_networks }}"
    nimbus_validator_fee_recipient: "{{ ethereum_node_cl_validator_fee_recipient }}"
    nimbus_mev_boost_enabled: "{{ ethereum_node_external_builder_enabled }}"
    nimbus_mev_boost_endpoint: "{{ ethereum_node_external_builder_endpoint }}"
    nimbus_checkpoint_sync_enabled: "{{ ethereum_node_cl_checkpoint_sync_enabled }}"
    nimbus_ipv6_enabled: "{{ ethereum_node_ipv6_enabled }}"

- name: "Consensus client: grandine"
  when: ethereum_node_cl == "grandine"
  ansible.builtin.include_role:
    name: ethpandaops.general.grandine
  vars:
    grandine_announced_ip: "{{ ethereum_node_announced_ip }}"
    grandine_ports_p2p_tcp: "{{ ethereum_node_cl_ports_p2p_tcp }}"
    grandine_ports_p2p_udp: "{{ ethereum_node_cl_ports_p2p_udp }}"
    grandine_ports_http_beacon: "{{ ethereum_node_cl_ports_http_beacon }}"
    grandine_ports_metrics: "{{ ethereum_node_cl_ports_metrics }}"
    grandine_ports_quic: "{{ ethereum_node_cl_ports_quic }}"
    grandine_container_networks: "{{ ethereum_node_docker_networks }}"
    grandine_container_pull: "{{ ethereum_node_images_always_pull }}"
    grandine_execution_engine_endpoint: "{{ ethereum_node_execution_engine_endpoint }}"
    grandine_validator_enabled: "{{ ethereum_node_cl_validator_enabled }}"
    grandine_validator_fee_recipient: "{{ ethereum_node_cl_validator_fee_recipient }}"
    grandine_mev_boost_enabled: "{{ ethereum_node_external_builder_enabled }}"
    grandine_mev_boost_endpoint: "{{ ethereum_node_external_builder_endpoint }}"
    grandine_checkpoint_sync_enabled: "{{ ethereum_node_cl_checkpoint_sync_enabled }}"
    grandine_ipv6_enabled: "{{ ethereum_node_ipv6_enabled }}"
